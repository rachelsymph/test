{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "version": "17.0.1"
    },
    "import/resolver": {
      "node": {
        "paths": "src",
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "typescript": {}
    }
  },
  "extends": [
    "eslint:recommended",
    "eslint-config-prettier",
    "plugin:react/recommended",
    "plugin:react-perf/recommended",
    "plugin:sonarjs/recommended"
  ],
  "env": {
    "es6": true,
    "jest": true,
    "browser": true,
    "commonjs": true
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-perf",
    "react-hooks",
    "sonarjs",
    "import"
  ],
  "rules": {
    "no-console": "warn",
    "no-alert": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["warn", { "args": "none" }],
    "max-depth": ["error", 3],
    "no-magic-numbers": [
      "error",
      { "ignore": [-1, 0, 1, 2, 30, 60, 100, 1000], "ignoreArrayIndexes": true }
    ],
    "import/order": [
      "error",
      {
        "pathGroups": [
          { "pattern": "src/**/*", "group": "internal", "position": "after" }
        ],
        "pathGroupsExcludedImportTypes": [],
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always-and-inside-groups",
        "alphabetize": {
          "order": "asc"
        }
      }
    ],
    "import/no-extraneous-dependencies": "off",
    "import/no-unresolved": "error",
    "prefer-const": "error",
    "react-perf/jsx-no-new-object-as-prop": "off",
    "react-perf/jsx-no-new-array-as-prop": "off",
    "react/display-name": "off",
    "react/jsx-handler-names": [
      "error",
      { "eventHandlerPrefix": "handle", "eventHandlerPropPrefix": "on" }
    ],
    "react/sort-comp": [
      "error",
      {
        "order": [
          "type-annotations",
          "static-methods",
          "lifecycle",
          "/^handle.+$/",
          "everything-else",
          "render"
        ]
      }
    ],
    "react-perf/jsx-no-new-function-as-prop": "off",
    "react/prefer-stateless-function": "error",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "sonarjs/cognitive-complexity": ["error", 20]
  }
}
